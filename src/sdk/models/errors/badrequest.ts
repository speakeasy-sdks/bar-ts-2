/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyMetadata } from "../../../internal/utils";
import { classToPlain, Expose } from "class-transformer";

export class BadRequest extends Error {
    /**
     * Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    error?: string;

    /**
     * HTTP status code
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status_code" })
    statusCode?: number;

    /**
     * The type of error returned
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type_name" })
    typeName?: string;

    constructor(err?: BadRequest) {
        super();
        if (err) {
            Object.assign(this, err);
            this.message = JSON.stringify(
                classToPlain(err, { exposeUnsetFields: false, excludeExtraneousValues: true })
            );
        }

        this.name = "BadRequest";
        Object.setPrototypeOf(this, BadRequest.prototype);
    }
}
